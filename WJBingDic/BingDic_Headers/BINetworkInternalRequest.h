//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class BINetworkRequest, NSError, NSHTTPURLResponse, NSMutableURLRequest, NSURLConnection;
@protocol BINetworkDataInternalProtocol, BINetworkProtocol;

@interface BINetworkInternalRequest : NSObject
{
    id mState;
    NSObject<BINetworkProtocol> *mDelegate;
    BINetworkRequest *mUserRequest;
    _Bool mCanStreamData;
    NSObject<BINetworkDataInternalProtocol> *mData;
    NSMutableURLRequest *mRequest;
    NSURLConnection *mConnection;
    NSHTTPURLResponse *mResponse;
    long long mCurrentByteCount;
    NSError *mNetworkError;
    _Bool mForceFail;
    _Bool mDataFromCache;
}

@property(nonatomic, getter=isDataFromCache) _Bool dataFromCache; // @synthesize dataFromCache=mDataFromCache;
@property(nonatomic) _Bool forceFail; // @synthesize forceFail=mForceFail;
@property(retain, nonatomic) NSError *networkError; // @synthesize networkError=mNetworkError;
@property(nonatomic) long long currentByteCount; // @synthesize currentByteCount=mCurrentByteCount;
@property(retain, nonatomic) NSHTTPURLResponse *response; // @synthesize response=mResponse;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=mConnection;
@property(retain, nonatomic) NSObject<BINetworkDataInternalProtocol> *data; // @synthesize data=mData;
@property(nonatomic) _Bool canStreamData; // @synthesize canStreamData=mCanStreamData;
@property(readonly, nonatomic) BINetworkRequest *userRequest; // @synthesize userRequest=mUserRequest;
@property(readonly, nonatomic) NSObject<BINetworkProtocol> *delegate; // @synthesize delegate=mDelegate;
@property(readonly, nonatomic) id state; // @synthesize state=mState;
@property(readonly, nonatomic) long long networkQueuePriority;
@property(readonly, nonatomic) long long workQueuePriority;
- (_Bool)shouldCancelOnTerminate;
@property(readonly, nonatomic) _Bool canUseURLCache;
@property(readonly, nonatomic) _Bool isCacheable; // @dynamic isCacheable;
@property(readonly, nonatomic) _Bool hasError;
- (void)cancel;
- (void)dealloc;
- (id)initWithState:(id)arg1 andDelegate:(id)arg2 andUserRequest:(id)arg3 andBuffer:(_Bool)arg4;

@end

